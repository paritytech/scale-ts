export const snapshot = {};

snapshot[`\$.result(
  \$.str,
  \$.instance(
    [class StrErr extends Error],
    \$.tuple(\$.str),
    [Function (anonymous)]
  )
) "ok" 1`] = `
00
08
6f
6b
`;

snapshot[`\$.result(
  \$.str,
  \$.instance(
    [class StrErr extends Error],
    \$.tuple(\$.str),
    [Function (anonymous)]
  )
) { [StrErr: err] str: "err", message: "StrErr: err" } 1`] = `
01
0c
65
72
72
`;

snapshot[`\$.result(
  \$.str,
  \$.instance(
    [class StrErr extends Error],
    \$.tuple(\$.str),
    [Function (anonymous)]
  )
) invalid null 1`] = `ScaleAssertError: typeof value !== "string"`;

snapshot[`\$.result(
  \$.str,
  \$.instance(
    [class StrErr extends Error],
    \$.tuple(\$.str),
    [Function (anonymous)]
  )
) invalid undefined 1`] = `ScaleAssertError: typeof value !== "string"`;

snapshot[`\$.result(
  \$.str,
  \$.instance(
    [class StrErr extends Error],
    \$.tuple(\$.str),
    [Function (anonymous)]
  )
) invalid [Error: foo] 1`] = `ScaleAssertError: !(value instanceof StrErr)`;

snapshot[`\$.result(
  \$.str,
  \$.instance(
    [class StrErr extends Error],
    \$.tuple(\$.str),
    [Function (anonymous)]
  )
) invalid { [StrErr: null] str: null, message: "StrErr: null" } 1`] = `ScaleAssertError: typeof value#arguments[0] !== "string"`;
